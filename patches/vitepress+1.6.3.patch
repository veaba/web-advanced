diff --git a/node_modules/vitepress/dist/client/app/index.js b/node_modules/vitepress/dist/client/app/index.js
index cd123a0..fd70b32 100644
--- a/node_modules/vitepress/dist/client/app/index.js
+++ b/node_modules/vitepress/dist/client/app/index.js
@@ -107,9 +107,9 @@ function newRouter() {
                     // try with/without trailing slash
                     // in prod this is handled in src/client/app/utils.ts#pathToFile
                     const url = new URL(pageFilePath, 'http://a.com');
-                    const path = (url.pathname.endsWith('/index.md')
+                    const path = (url.pathname.endsWith('/README.md')
                         ? url.pathname.slice(0, -9) + '.md'
-                        : url.pathname.slice(0, -3) + '/index.md') +
+                        : url.pathname.slice(0, -3) + '/README.md') +
                         url.search +
                         url.hash;
                     return import(/*@vite-ignore*/ path);
diff --git a/node_modules/vitepress/dist/client/app/router.js b/node_modules/vitepress/dist/client/app/router.js
index 9bce166..bd97a93 100644
--- a/node_modules/vitepress/dist/client/app/router.js
+++ b/node_modules/vitepress/dist/client/app/router.js
@@ -55,7 +55,7 @@ export function createRouter(loadPageModule, fallbackComponent) {
                 if (inBrowser) {
                     nextTick(() => {
                         let actualPathname = siteDataRef.value.base +
-                            __pageData.relativePath.replace(/(?:(^|\/)index)?\.md$/, '$1');
+                            __pageData.relativePath.replace(/(?:(^|\/)README)?\.md$/, '$1');
                         if (!siteDataRef.value.cleanUrls && !actualPathname.endsWith('/')) {
                             actualPathname += '.html';
                         }
@@ -229,7 +229,7 @@ function handleHMR(route) {
     }
 }
 function shouldHotReload(payload) {
-    const payloadPath = payload.path.replace(/(?:(^|\/)index)?\.md$/, '$1');
+    const payloadPath = payload.path.replace(/(?:(^|\/)README)?\.md$/, '$1');
     const locationPath = location.pathname
         .replace(/(?:(^|\/)index)?\.html$/, '')
         .slice(siteDataRef.value.base.length - 1);
diff --git a/node_modules/vitepress/dist/client/app/utils.js b/node_modules/vitepress/dist/client/app/utils.js
index f2f0250..d9ac61e 100644
--- a/node_modules/vitepress/dist/client/app/utils.js
+++ b/node_modules/vitepress/dist/client/app/utils.js
@@ -22,7 +22,7 @@ export function withBase(path) {
 export function pathToFile(path) {
     let pagePath = path.replace(/\.html$/, '');
     pagePath = decodeURIComponent(pagePath);
-    pagePath = pagePath.replace(/\/$/, '/index'); // /foo/ -> /foo/index
+    pagePath = pagePath.replace(/\/$/, '/README'); // /foo/ -> /foo/index
     if (import.meta.env.DEV) {
         // always force re-fetch content in dev
         pagePath += `.md?t=${Date.now()}`;
@@ -34,14 +34,14 @@ export function pathToFile(path) {
         if (inBrowser) {
             const base = import.meta.env.BASE_URL;
             pagePath =
-                sanitizeFileName(pagePath.slice(base.length).replace(/\//g, '_') || 'index') + '.md';
+                sanitizeFileName(pagePath.slice(base.length).replace(/\//g, '_') || 'README') + '.md';
             // client production build needs to account for page hash, which is
             // injected directly in the page's html
             let pageHash = __VP_HASH_MAP__[pagePath.toLowerCase()];
             if (!pageHash) {
-                pagePath = pagePath.endsWith('_index.md')
+                pagePath = pagePath.endsWith('_README.md')
                     ? pagePath.slice(0, -9) + '.md'
-                    : pagePath.slice(0, -3) + '_index.md';
+                    : pagePath.slice(0, -3) + '_README.md';
                 pageHash = __VP_HASH_MAP__[pagePath.toLowerCase()];
             }
             if (!pageHash)
