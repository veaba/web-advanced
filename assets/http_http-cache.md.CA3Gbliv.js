import{_ as i,c as a,o as l,aa as h}from"./chunks/framework.qnqjiyko.js";const n="/images/http/cache-304.png",k="/images/http/baidu-cache.png",g=JSON.parse('{"title":"HTTP 缓存","description":"","frontmatter":{},"headers":[],"relativePath":"http/http-cache.md","filePath":"http/http-cache.md"}'),e={name:"http/http-cache.md"};function t(p,s,d,r,F,c){return l(),a("div",null,s[0]||(s[0]=[h(`<h1 id="http-缓存" tabindex="-1">HTTP 缓存 <a class="header-anchor" href="#http-缓存" aria-label="Permalink to &quot;HTTP 缓存&quot;">​</a></h1><ul><li>缓存的规则</li><li>缓存的方案</li><li>缓存的优点</li><li>不同刷新的的请求执行过程</li></ul><h2 id="缓存规则" tabindex="-1">缓存规则 <a class="header-anchor" href="#缓存规则" aria-label="Permalink to &quot;缓存规则&quot;">​</a></h2><p>用于缓存 <code>js</code>、<code>css</code>、图片等资源，根据缓存阶段，分为两个<strong>强制缓存</strong>、<strong>协商缓存</strong></p><ul><li><p><code>强缓存</code> 和 <code>协商缓存</code> 同时存在，强缓存优先级高于协商缓存</p></li><li><p>执行强缓存时，若命中，则直接使用缓存数据库数据 (即本地数据)，不在进行缓存协商。</p></li></ul><h3 id="强制缓存" tabindex="-1">强制缓存 <a class="header-anchor" href="#强制缓存" aria-label="Permalink to &quot;强制缓存&quot;">​</a></h3><p>强缓存下，命中规则</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                             +------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  客户端</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ------request----------</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  缓存数据库</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                             +------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                           |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                           |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                             +------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  缓存数据库</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--有缓存，且为失效，返回数据</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 客户端</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                             +------------+</span></span></code></pre></div><p>问题：此时如何判断失效？</p><p>强缓存，为命中</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                       +------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  +------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  客户端</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> request</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ----</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  缓存数据库</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   服务器</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                       +------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  +------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                     |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">               |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">------------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> invalid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">               |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                     |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ---------------------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> request</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                     |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> response</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rule</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                     |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ---------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> saved</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span></code></pre></div><p>问题：此时的 cache rule 是什么？</p><h3 id="协商缓存" tabindex="-1">协商缓存 <a class="header-anchor" href="#协商缓存" aria-label="Permalink to &quot;协商缓存&quot;">​</a></h3><p>客户端，从缓存数据库中获得到缓存数据的标识，得到标识后发起 request 到服务器，询问是否最新的？</p><p><img src="`+n+`" alt="cache-304"></p><ul><li>如果没有失效，服务器，返回 <code>304</code>，客户端直接从缓存中获得所请求的的数据？ <ul><li>(比如不加后缀的，即哈希值，容易返回 <code>304</code>)</li></ul></li></ul><p>问题：此时所说的 <code>客户端直接从缓存中获得所请求的的数据</code> 是从浏览器的那个缓存数据库吗？那为什么有些 <code>304</code> 显示 <code>memory cache</code> 或 <code>disk cache</code>，有些 <code>304</code> 则显示具体的 <code>size</code> 大小呢？</p><p>协商缓存下，命中规则</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                       +------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  +------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  客户端</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                       |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  缓存数据库</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   服务器</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                       +------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  +------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                     |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">               |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ----------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 获取缓存数据的标识</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">               |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                     |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">----------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 返回缓存数据的标识</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                     |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> -----</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 请求服务器验证缓存标识对应的数据是否已失效</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                     |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--------------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 通知客户端缓存还未失效</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ----------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> --------------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 获取缓存数据--------</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span></code></pre></div><p>协商缓存下，未命中规则</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                       +------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  +------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  客户端</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                       |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  缓存数据库</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   服务器</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                       +------------+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  +------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                     |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">               |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ----------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 获取缓存数据的标识</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">               |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                     |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">----------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 返回缓存数据的标识</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">               |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                     |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> -----</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 请求服务器验证缓存标识对应的数据是否已失效</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                     |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--------------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 返回最新数据和缓存的规则</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                     |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> -----</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 将数据和规则都存入到系统</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -------</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">               |</span></span></code></pre></div><h3 id="缓存方案" tabindex="-1">缓存方案 <a class="header-anchor" href="#缓存方案" aria-label="Permalink to &quot;缓存方案&quot;">​</a></h3><p><strong>在强缓存阶段</strong>： 客户端发起 HTTP 请求，主要是通过以下两个字段来与服务器获得缓存请求更换的。</p><ul><li><p><strong>Cache-control</strong>：<code>cache-control: max-age=600</code></p><ul><li><code>max-age=600</code>，表示缓存的内容在 600 秒后失效</li><li><code>private</code>：客户端可以缓存</li><li><code>public</code>：客户端和服务器都可以缓存</li><li><code>max-age=t</code>：缓存的内容将在 <code>t</code> 秒后失效</li><li><code>no-cache</code>：需要使用协商缓存来验证缓存数据</li><li><code>no-store</code>：所有内容都不缓存</li><li><code>Cache-Control: no-store, no-cache, no-transform, must-revalidate, max-age=0</code>：比如 <code>sockjs-node/info?t=1610684159275</code> 中的请求</li></ul></li><li><p><strong>Expires</strong>：<code>expires: Fri, 15 Jan 2021 03:04:40 GMT</code></p><ul><li>返回服务器返回的数据的到期时间</li><li>当再次请求时的请求时间小于返回的此时间，则直接使用缓存数据。(问题：此时的从什么地方使用缓存？服务器？客户端？)</li><li>旧时代产物，由于时间 BS 时间误差，现在用 <code>cache-control</code> 替代</li></ul></li></ul><p><strong>在协商缓存阶段</strong>：</p><p>协商缓存，即和服务器进行协商。浏览器发起 HTTP 请求后，服务器将缓存标识和数据一起给客户端。客户端备份至自己的缓存中。 再次请求后，将带有的缓存标识也一并发给服务器，服务器据此作出判断，未失效则 <code>304</code>，客户端拿到该状态码直接使用缓存数据。</p><ul><li><p><strong>ETag</strong>：<code>ETag: W/&quot;5ffefa99-834c&quot;</code>：服务器告诉浏览器当前资源在服务生成唯一标识。</p><ul><li>ETag 比较昂贵，占用服务器资源。</li><li><strong>If-None-Match</strong>： <ul><li>不同：说明资源被改动过，整体返回响应体，<code>200</code></li><li>相同：资源 w 无心修改，直接读取客户端的缓存，响应 <code>304</code></li></ul></li></ul></li><li><p><strong>Last-modified</strong>：<code>Last-modified: Wed, 13 Jan 2021 13:50:17 GMT</code></p><ul><li>服务器在响应时，会告诉浏览器资源的最后修改时间。</li><li>(问题，这个时间如何判断？)</li><li><code>If-Modified-since</code>：浏览器再次请求服务器的时候，请求头会包含此字段<strong>修改才下载</strong><ul><li>与最后修改时间对比，一致返回 <code>304</code></li><li>从这个时间开始算起</li><li>被修改：传输响应整体，<code>200</code> Ok</li><li>未修改：只传输响应 header，<code>304</code> Not Modified</li></ul></li><li><code>If-Unmodified-Since</code>：从这个事件算起，是否文件没有被更改？<strong>属于未修改才下载</strong><ul><li>被修改：不传输，服务器返回，<code>412</code> Precondition failed (预处理错误)</li><li>未修改：继续传输文件，<code>200</code> Ok</li></ul></li></ul></li></ul><p>在强缓存阶段：服务器响应的 header 中 <code>Expires(逾期)</code>、<code>Cache-Control</code> 表示。</p><p><img src="`+k+'" alt="baidu-cache"></p><p>上图中，百度首页，有两个文件 (<code>cd37ed75a9387c5b.js</code>、<code>d</code>) 将 <code>Cache-control</code> 设置为极低：<code>max-age=3600</code> 甚至不设置。</p><p>而其他则设置极高 <code>Cache-control: max-age=2592000</code>，测试则从 <code>memory-cache</code> 中加载</p><h2 id="缓存优点" tabindex="-1">缓存优点 <a class="header-anchor" href="#缓存优点" aria-label="Permalink to &quot;缓存优点&quot;">​</a></h2><ul><li>减少冗余的数据传输，节省宽带流量</li><li>减少服务器负担，提高网站性能</li><li>加快客户端加载网页的速度。</li></ul><h2 id="其他特性" tabindex="-1">其他特性 <a class="header-anchor" href="#其他特性" aria-label="Permalink to &quot;其他特性&quot;">​</a></h2><ul><li>F5，去看看文件过期了没有？请求带上 <code>If-Modify-since</code>，但是现在很多网站的没有这个字段</li><li>CTRL+F5，先删除缓存文件，再去服务器请求完整资源文件，强迫客户端强制执行首次更新拉取最新的资源，不缓存</li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><ul><li>强缓存：<code>Cache-control</code>、<code>Expires</code></li><li>协商缓存：<code>last-modified</code>、<code>eTag</code></li><li><code>Cache-Control:max-ege:600</code>：在 <code>600s</code> 后，请求这个文件才重新请求服务器</li><li><code>Expires</code>：<code>Expires</code>= max-age + 请求时间，需要与 <code>last-modified</code> 配合 <ul><li>过期时间前，可以从浏览器缓存取数据，无需请求</li></ul></li></ul><h2 id="todo-问题" tabindex="-1">TODO：问题 <a class="header-anchor" href="#todo-问题" aria-label="Permalink to &quot;TODO：问题&quot;">​</a></h2><ol><li>HTTP 的服务器是如何缓存数据的？</li><li><code>cache-control:max-age=10</code>，<code>10s</code> 后如何处理后续的缓存工作？</li><li><code>协商缓存是什么？</code></li><li><code>强缓存是什么？</code> 是怎么判断本地有缓存的？</li><li>Chrome 勾选了 <code>Disable Cache</code>，禁用缓存 <ul><li>顺序：<s>强缓存 (<code>Cache-Control</code>、<code>Expires</code>)</s> ——&gt; 协商缓存 (<code>last-modified</code>、<code>ETag</code>)。直接进入协商缓存</li></ul></li><li>Chrome 取消勾选了 <code>Disable Cache</code></li></ol><ul><li>顺序：强缓存 (<code>Cache-Control</code>、<code>Expires</code>) ——&gt; 协商缓存 (<code>last-modified</code>、<code>ETag</code>)</li><li>此时直接从 <code>memory</code> 或 <code>disk</code> 中读取存储的缓存</li></ul>',40)]))}const y=i(e,[["render",t]]);export{g as __pageData,y as default};
