import{_ as o,c as a,o as l,aa as i}from"./chunks/framework.qnqjiyko.js";const m=JSON.parse('{"title":"V8 垃圾回收机制","description":"","frontmatter":{"mermaidTheme":"forest"},"headers":[],"relativePath":"frontend/v8/garbage.md","filePath":"frontend/v8/garbage.md"}'),d={name:"frontend/v8/garbage.md"};function c(t,e,r,n,s,p){return l(),a("div",null,e[0]||(e[0]=[i('<h1 id="v8-垃圾回收机制" tabindex="-1">V8 垃圾回收机制 <a class="header-anchor" href="#v8-垃圾回收机制" aria-label="Permalink to &quot;V8 垃圾回收机制&quot;">​</a></h1><h2 id="keyword" tabindex="-1">keyword <a class="header-anchor" href="#keyword" aria-label="Permalink to &quot;keyword&quot;">​</a></h2><ul><li><code>堆</code></li><li><code>栈</code></li><li><code>基本类型</code></li><li><code>引用类型</code></li><li><code>新生代</code></li><li><code>老生代</code></li><li><code>生存时间长</code></li><li><code>生存时间短</code></li><li><code>Scavenge</code></li><li><code>Mark sweep &amp; Mark Compact</code></li><li><code>from-space</code></li><li><code>to-space</code></li><li><code>root set</code></li><li><code>对象可达性</code></li><li><code>标记阶段</code></li><li><code>清理阶段</code></li><li><code>内存碎片</code></li><li><code>全停顿</code></li><li><code>Stop The World</code></li><li><code>Orinoco</code></li><li><code>Incremental marking</code></li><li><code>增量标记</code></li><li><code>lazy sweeping</code></li><li><code>懒性清理</code></li><li><code>Concurrent</code></li><li><code>并发</code></li><li><code>并行</code></li><li><code>Parallel</code></li><li><code>副垃圾回收器</code></li><li><code>主垃圾回收器</code></li><li>``</li></ul><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-label="Permalink to &quot;引用&quot;">​</a></h2><ul><li><a href="https://juejin.cn/post/6876638765025067015" target="_blank" rel="noreferrer">深入理解 Chrome V8 垃圾回收机制</a></li></ul><h2 id="基本类型和引用类型在内存中" tabindex="-1">基本类型和引用类型在内存中 <a class="header-anchor" href="#基本类型和引用类型在内存中" aria-label="Permalink to &quot;基本类型和引用类型在内存中&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>+------------+          +--------------+</span></span>\n<span class="line"><span>|    栈      |   ----   |     堆        |</span></span>\n<span class="line"><span>+------------+          +--------------+</span></span></code></pre></div>',7)]))}const u=o(d,[["render",c]]);export{m as __pageData,u as default};
