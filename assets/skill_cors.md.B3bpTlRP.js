import{_ as e,c as t,o,aa as i}from"./chunks/framework.qnqjiyko.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"skill/cors.md","filePath":"skill/cors.md"}'),a={name:"skill/cors.md"};function r(s,l,n,c,u,_){return o(),t("div",null,l[0]||(l[0]=[i('<h2 id="跨域问题" tabindex="-1">跨域问题 <a class="header-anchor" href="#跨域问题" aria-label="Permalink to &quot;跨域问题&quot;">​</a></h2><blockquote><p><a href="https://segmentfault.com/a/1190000011145364" target="_blank" rel="noreferrer">https://segmentfault.com/a/1190000011145364</a></p></blockquote><ul><li>JSONP 跨域 <ul><li><strong>缺点：只支持 get、不支持 post</strong></li><li>传递函数名</li></ul></li><li>document.domain <blockquote><p>引入 iframe 时候，无法使用 js 交互操作</p></blockquote><ul><li>使用 document.domain 将主页面和子页面都设置为相同的域名就可以了</li><li><strong>缺点：设置成自身或更高一级的父级，且主域必须相同</strong></li><li>原因：</li></ul></li><li>postMessage 跨文档通信 API，跨窗口通信</li><li>window.name 进行跨域</li><li>跨资源共享 (CORS) <ul><li><blockquote><p>IE10</p></blockquote></li><li>依赖服务端改造 header</li></ul></li><li>nginx 代理跨域</li><li>nodejs 中间件代理跨域</li><li>websocket 协议跨域 <blockquote></blockquote></li></ul>',3)]))}const m=e(a,[["render",r]]);export{p as __pageData,m as default};
