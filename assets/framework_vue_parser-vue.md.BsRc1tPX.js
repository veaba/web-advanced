import{_ as a,c as r,o as t,aa as o}from"./chunks/framework.qnqjiyko.js";const u=JSON.parse('{"title":"解析 Vue.js 文件","description":"","frontmatter":{"sidebar":"auto"},"headers":[],"relativePath":"framework/vue/parser-vue.md","filePath":"framework/vue/parser-vue.md"}'),n={name:"framework/vue/parser-vue.md"};function i(s,e,l,h,d,c){return t(),r("div",null,e[0]||(e[0]=[o('<h1 id="解析-vue-js-文件" tabindex="-1">解析 Vue.js 文件 <a class="header-anchor" href="#解析-vue-js-文件" aria-label="Permalink to &quot;解析 Vue.js 文件&quot;">​</a></h1><h2 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h2><h3 id="optionmergestrategies" tabindex="-1">optionMergeStrategies <a class="header-anchor" href="#optionmergestrategies" aria-label="Permalink to &quot;optionMergeStrategies&quot;">​</a></h3><p><code>Object.create(null)</code></p><h3 id="silent" tabindex="-1">silent <a class="header-anchor" href="#silent" aria-label="Permalink to &quot;silent&quot;">​</a></h3><p>是否警告</p><h3 id="productiontip" tabindex="-1">productionTip <a class="header-anchor" href="#productiontip" aria-label="Permalink to &quot;productionTip&quot;">​</a></h3><p>开发环境提示</p><h3 id="devtools" tabindex="-1">devtools <a class="header-anchor" href="#devtools" aria-label="Permalink to &quot;devtools&quot;">​</a></h3><p>是否启动 devtools 工具</p><h3 id="performance" tabindex="-1">performance <a class="header-anchor" href="#performance" aria-label="Permalink to &quot;performance&quot;">​</a></h3><p>是否记录性能</p><h3 id="errorhandler" tabindex="-1">errorHandler <a class="header-anchor" href="#errorhandler" aria-label="Permalink to &quot;errorHandler&quot;">​</a></h3><p>错误处理程序中的错误</p><h3 id="warnhandler" tabindex="-1">warnHandler <a class="header-anchor" href="#warnhandler" aria-label="Permalink to &quot;warnHandler&quot;">​</a></h3><p>警告处理程序观察家警告说</p><h3 id="ignoreelements" tabindex="-1">ignoreElements <a class="header-anchor" href="#ignoreelements" aria-label="Permalink to &quot;ignoreElements&quot;">​</a></h3><p>忽略某些自定义元素</p><h3 id="keycodes" tabindex="-1">keyCodes <a class="header-anchor" href="#keycodes" aria-label="Permalink to &quot;keyCodes&quot;">​</a></h3><p>用户自定有 v-on 的别名</p><h3 id="isreservedtag" tabindex="-1">isReservedTag <a class="header-anchor" href="#isreservedtag" aria-label="Permalink to &quot;isReservedTag&quot;">​</a></h3><p>检查是否是保留的 tag，以便不能注册为组件，可能被覆盖</p><h3 id="isreservedattr" tabindex="-1">isReservedAttr <a class="header-anchor" href="#isreservedattr" aria-label="Permalink to &quot;isReservedAttr&quot;">​</a></h3><p>可能被覆盖，检查一个属性是否保留，以便它不能作为一个组件</p><h3 id="isunknownelement" tabindex="-1">isUnknownElement <a class="header-anchor" href="#isunknownelement" aria-label="Permalink to &quot;isUnknownElement&quot;">​</a></h3><p>未知的元素</p><h3 id="gettagnamespace" tabindex="-1">getTagNamespace <a class="header-anchor" href="#gettagnamespace" aria-label="Permalink to &quot;getTagNamespace&quot;">​</a></h3><p>获取元素的命名空间</p><h3 id="parseplatformtagname" tabindex="-1">parsePlatformTagName <a class="header-anchor" href="#parseplatformtagname" aria-label="Permalink to &quot;parsePlatformTagName&quot;">​</a></h3><p>解析为特定平台真正的标签名称。</p><h3 id="mustuseprop" tabindex="-1">mustUseProp <a class="header-anchor" href="#mustuseprop" aria-label="Permalink to &quot;mustUseProp&quot;">​</a></h3><p>检查是否必须值，与平台相关</p><h3 id="lifecyclehooks" tabindex="-1">_lifecycleHooks <a class="header-anchor" href="#lifecyclehooks" aria-label="Permalink to &quot;\\_lifecycleHooks&quot;">​</a></h3><p>暴露原因遗留</p><h2 id="大量的工具类函数" tabindex="-1">大量的工具类函数 <a class="header-anchor" href="#大量的工具类函数" aria-label="Permalink to &quot;大量的工具类函数&quot;">​</a></h2>',35)]))}const m=a(n,[["render",i]]);export{u as __pageData,m as default};
