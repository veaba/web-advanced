import{_ as d,c as e,o,aa as a}from"./chunks/framework.qnqjiyko.js";const u=JSON.parse('{"title":"BOM 对象","description":"","frontmatter":{"sidebar":"auto"},"headers":[],"relativePath":"javascript/bom.md","filePath":"javascript/bom.md"}'),r={name:"javascript/bom.md"};function c(i,t,l,h,s,n){return o(),e("div",null,t[0]||(t[0]=[a('<h1 id="bom-对象" tabindex="-1">BOM 对象 <a class="header-anchor" href="#bom-对象" aria-label="Permalink to &quot;BOM 对象&quot;">​</a></h1><h2 id="window-对象" tabindex="-1">window 对象 <a class="header-anchor" href="#window-对象" aria-label="Permalink to &quot;window 对象&quot;">​</a></h2><ul><li>浏览器窗口</li></ul><h2 id="location-对象" tabindex="-1">Location 对象 <a class="header-anchor" href="#location-对象" aria-label="Permalink to &quot;Location 对象&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>是 window 对象也是 document 对象。其中 search 不实用，需要改造函数来实现</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>可以对这个对象增加新属性，但无法对原来的属性值作出随意变更赋值。</p></div><table tabindex="0"><thead><tr><th>属性或方法</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>ancestorOrigins</td><td></td><td></td></tr><tr><td>hash</td><td></td><td></td></tr><tr><td>hostname</td><td><code>www.baidu.com</code></td><td></td></tr><tr><td>href</td><td><code>https://www.baidu.com/#dsad?dsd=dsd</code></td><td></td></tr><tr><td>origin</td><td><code>https://www.baidu.com</code></td><td></td></tr><tr><td>pathname</td><td><code>/</code></td><td></td></tr><tr><td>protocol</td><td><code>https</code></td><td></td></tr><tr><td>search</td><td></td><td></td></tr><tr><td><code>assign(url)</code></td><td></td><td>生成一个 <code>location</code> 并跳转</td></tr><tr><td><code>reload()</code></td><td></td><td></td></tr><tr><td><code>replace()</code></td><td></td><td>传递 <code>true</code> ，则强制刷新</td></tr><tr><td><code>toString()</code></td><td></td><td></td></tr></tbody></table><p>往往通过 <code>query-string</code> 的 npm 库来增强使用，</p><h2 id="navigator-对象" tabindex="-1">Navigator 对象 <a class="header-anchor" href="#navigator-对象" aria-label="Permalink to &quot;Navigator 对象&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>可以去往这个对象增加新属性，但无法对原来的属性值作出随意变更赋值。</p><p>可以使用 <code>Object.defineProperty(navigator,&#39;userAgent&#39;,{value:&#39;foo&#39;})</code> 来修改</p></div><ul><li>chrome 和 firefox 参数都有自己的，相同的属性或者同属性的值挺少的。</li><li>node 去判断用户代理字段的特征值，类似这种 npm 库 <a href="https://www.npmjs.com/package/user-agent" target="_blank" rel="noreferrer"><code>user-agent</code></a></li><li>红宝石书中有一段检查浏览器、厂商、平台、操作系统的完全代码</li></ul><h2 id="screen-对象" tabindex="-1">Screen 对象 <a class="header-anchor" href="#screen-对象" aria-label="Permalink to &quot;Screen 对象&quot;">​</a></h2><blockquote><p>用处不大，表明客户端的能力，DPI 之类屏幕像素宽高等</p></blockquote><h2 id="history-对象" tabindex="-1">History 对象 <a class="header-anchor" href="#history-对象" aria-label="Permalink to &quot;History 对象&quot;">​</a></h2><blockquote><p>无法得知浏览过的 url，但可以通过实现前进和后退</p></blockquote><ul><li>go(-)</li></ul><table tabindex="0"><thead><tr><th>属性或方法</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td><code>go(1)</code></td><td>整数</td><td>整数，前进，负数，后退</td></tr><tr><td><code>back()</code></td><td></td><td>等同于 go(负数)</td></tr><tr><td><code>forward()</code></td><td></td><td>等同于 go(正数)</td></tr><tr><td>length</td><td>整数，0 就是第一个目标页面</td><td>表示历史记录有几条</td></tr></tbody></table><h2 id="存储对象" tabindex="-1">存储对象 <a class="header-anchor" href="#存储对象" aria-label="Permalink to &quot;存储对象&quot;">​</a></h2><ul><li><code>sessionStorage</code> 会话存储</li><li><code>localStorage</code> 本地存储</li></ul><table tabindex="0"><thead><tr><th>属性或方法</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>length</td><td></td><td></td></tr><tr><td><code>key(n)</code></td><td></td><td></td></tr><tr><td><code>getItem(keyName)</code></td><td></td><td></td></tr><tr><td><code>setItem(keyName,value)</code></td><td></td><td></td></tr><tr><td><code>removeItem(keyName)</code></td><td></td><td></td></tr><tr><td><code>clear()</code></td><td></td><td></td></tr></tbody></table><h3 id="比较" tabindex="-1">比较 <a class="header-anchor" href="#比较" aria-label="Permalink to &quot;比较&quot;">​</a></h3><p><code>Cookie</code>、<code>Session</code>、<code>localStorage</code> 比较</p><table tabindex="0"><thead><tr><th>差异</th><th>Cookie</th><th>Session</th><th>LocalStorage</th></tr></thead><tbody><tr><td>存储</td><td>5K</td><td>5M</td><td>5M</td></tr><tr><td>生命周期</td><td>浏览器访问期间</td><td>浏览器访问期间</td><td>永久有效</td></tr></tbody></table>',23)]))}const p=d(r,[["render",c]]);export{u as __pageData,p as default};
