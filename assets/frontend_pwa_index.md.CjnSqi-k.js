import{_ as a,c as i,o as l,aa as t}from"./chunks/framework.qnqjiyko.js";const u=JSON.parse('{"title":"PWA","description":"","frontmatter":{"sidebar":"auto"},"headers":[],"relativePath":"frontend/pwa/index.md","filePath":"frontend/pwa/index.md"}'),o={name:"frontend/pwa/index.md"};function r(c,e,n,d,s,p){return l(),i("div",null,e[0]||(e[0]=[t('<h1 id="pwa" tabindex="-1">PWA <a class="header-anchor" href="#pwa" aria-label="Permalink to &quot;PWA&quot;">​</a></h1><h2 id="service-worker-工作线程-子线程" tabindex="-1">Service worker 工作线程，子线程 <a class="header-anchor" href="#service-worker-工作线程-子线程" aria-label="Permalink to &quot;Service worker 工作线程，子线程&quot;">​</a></h2><blockquote><p>2014 年 5 月提出，前身是 Application Cache <code>被移除</code></p></blockquote><ul><li>Application Cache 指定缓存策略 app.appcache</li><li>不能直接访问/操作 DOM 特定的 API <ul><li><code>全局</code>Promise/Fetch API/Cache API</li></ul></li><li>生命周期内，需要时，直接唤醒，不需要则自动休眠，不随浏览器窗口关闭、站点的关闭而失效</li><li>离线内容可控</li><li>一旦安装，永远存活，除非手动卸载</li><li>必须 HTTPS，除非本地环境下</li><li>广泛使用 Promise</li><li>生命周期 Register - &gt; Install -&gt; activated</li><li>组织结构 <ul><li>注册 sw 是一个脚本文件 <code>延时注册</code></li><li>工作时候的 sw 又是另外一个脚本文件</li></ul></li></ul>',4)]))}const h=a(o,[["render",r]]);export{u as __pageData,h as default};
