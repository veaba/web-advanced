import{_ as i,c as e,o,aa as d}from"./chunks/framework.qnqjiyko.js";const m=JSON.parse('{"title":"V8 引擎","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/v8/index.md","filePath":"frontend/v8/index.md"}'),a={name:"frontend/v8/index.md"};function c(r,l,t,n,s,u){return o(),e("div",null,l[0]||(l[0]=[d('<h1 id="v8-引擎" tabindex="-1">V8 引擎 <a class="header-anchor" href="#v8-引擎" aria-label="Permalink to &quot;V8 引擎&quot;">​</a></h1><h2 id="相关链接" tabindex="-1">相关链接 <a class="header-anchor" href="#相关链接" aria-label="Permalink to &quot;相关链接&quot;">​</a></h2><ul><li><a href="https://v8.dev/docs/" target="_blank" rel="noreferrer">v8 官网</a></li><li><a href="https://github.com/chromium/chromium" target="_blank" rel="noreferrer">Chromium</a></li></ul><h2 id="文档" tabindex="-1">文档 <a class="header-anchor" href="#文档" aria-label="Permalink to &quot;文档&quot;">​</a></h2><p>V8 是 Google 的开源高性能 JavaScript 和 WebAssembly 引擎，用 C++编写。它用于 Chrome 和 Node.js 等。</p><p>此文档旨在针对那些希望在应用程序中使用 <code>V8</code> 的 C++开发人员，以及对 V8 的设计和性能感兴趣的人。 本文档向您介绍了 <code>V8</code>，而其余的文档则向您展示了如何在代码中使用 <code>V8</code>，并描述了它的一些设计细节，还提供了一组用于测量 <code>V8</code> 性能的 JavaScript 基准。</p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li>从源码构建 <code>V8</code><ul><li><a href="/frontend/v8/source-code.html"><code>V8</code> 源码检出</a></li><li><a href="/frontend/v8/build-gn.html">通过 GN 构建</a></li><li><code>ARM/Android</code> 的交叉编译与调试</li><li><code>iOS</code> 交叉编译</li><li><code>GUI</code> 和 <code>IDE</code> 安装</li></ul></li><li>贡献 <ul><li><code>V8</code> 公共 <code>API</code> 及其稳定性</li><li>成为 <code>V8</code> 的提交者</li><li>提交者的责任</li><li>Blink web 测试 (也称布局测试)</li><li>评估代码覆盖率</li><li>发布进程</li><li>设计评审指南</li><li>实现和发布 <code>JavaScript/WebAssembly</code> 语言特性</li><li><code>WebAssembly</code> 特性的暂存和装运清单</li><li>二分查找算法</li><li>端口处理</li><li>合并&amp;补丁</li><li>Node.js 整合构建</li><li>报告安全性 bug</li><li>在本地运行基准测试</li><li>测试</li><li>分流 issues</li></ul></li><li>调试 <ul><li>用模拟器进行 Arm 调试</li><li><code>ARM/Android</code> 的交叉编译与调试</li><li>用 <code>GDB</code> 调试内置代码</li><li>通过 <code>V8</code> 检查器协议进行调试</li><li><code>GDB JIT</code> 编译接口集成</li><li>调查内存泄漏</li><li>堆栈跟踪 API</li><li>使用 <code>D8</code></li></ul></li><li>嵌入 V8 <ul><li>嵌入 V8 指南</li><li>版本号</li><li>内置函数</li><li>i18n 支持</li><li>不受信任的代码缓解？</li></ul></li><li>高级选项 <ul><li>点火开关？</li><li>发动机？</li><li>扭矩用户手册？</li><li>内置写入扭矩</li><li>编写 CSA 内置</li><li>添加新的 <code>WebAssembly</code> 操作码</li></ul></li><li>编写可优化的 JavaScript <ul><li>使用 <code>V8</code> 的基于样本的探查器</li><li>在 <code>V8</code> 中剖析 Chromium</li><li>在 V8 中使用 Linux 性能</li><li>跟踪 V8</li><li>使用运行时调用统计信息</li></ul></li></ul>',8)]))}const f=i(a,[["render",c]]);export{m as __pageData,f as default};
