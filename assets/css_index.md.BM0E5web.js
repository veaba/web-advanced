import{_ as o,c as l,o as i,aa as d}from"./chunks/framework.qnqjiyko.js";const p=JSON.parse('{"title":"Css 部分","description":"","frontmatter":{"sidebar":"auto"},"headers":[],"relativePath":"css/index.md","filePath":"css/index.md"}'),c={name:"css/index.md"};function a(t,e,r,s,n,h){return i(),l("div",null,e[0]||(e[0]=[d('<h1 id="css-部分" tabindex="-1">Css 部分 <a class="header-anchor" href="#css-部分" aria-label="Permalink to &quot;Css 部分&quot;">​</a></h1><h2 id="css-实现水平垂直居中的-1010-种方式-史上最全" tabindex="-1">CSS 实现水平垂直居中的 1010 种方式 (史上最全) <a class="header-anchor" href="#css-实现水平垂直居中的-1010-种方式-史上最全" aria-label="Permalink to &quot;CSS 实现水平垂直居中的 1010 种方式 (史上最全)&quot;">​</a></h2><ul><li><a href="https://segmentfault.com/a/1190000016389031" target="_blank" rel="noreferrer">CSS 实现水平垂直居中</a></li></ul><h2 id="知识点" tabindex="-1">知识点 <a class="header-anchor" href="#知识点" aria-label="Permalink to &quot;知识点&quot;">​</a></h2><ul><li><p>外边距坍塌问题。块级之间共享垂直外边距，<code>margin</code> 取最大值</p><ul><li>解决办法，给第二个兄弟加个父级，且给原兄弟使用 <code>margin</code></li></ul></li><li><p>当 <code>margin-top</code>、<code>padding-top</code> 值是百分比时，将以父级块级元素的 <code>width</code>、相对父级块级元素的 <code>width</code> 分别计算</p></li><li><p><code>background-position</code>:</p><ul><li>该属性可有两个取值，第一个取值为背景图像与其容器在水平方向上的距离，第二个取值为背景图像与其容器在垂直方向上的距离</li><li>若只有一个取值，则其第二个取值默认为 50%；</li><li>如果第一个值取关键词，则第二个默认值为：<code>center</code></li><li>若属性取值用 <code>left</code>、<code>center</code>、<code>right</code>、<code>top</code>、<code>bottom</code> 表示，则该属性取值的顺序可以颠倒，否则其取值顺序不能颠倒</li></ul></li><li><p>关于 <code>link</code> 和 <code>@import</code>：</p><ul><li>页面被加载时，<code>link</code> 会同时被加载</li><li><code>@import</code> 引用的 <code>css</code> 会等到页面被加载完再加载</li><li><code>@import</code> 只能加载 <code>css</code>，<code>link</code> 标签还可以定义 <code>RSS</code> 等</li><li><code>@import</code> 是 <code>css2.1</code> 提出，<code>IE5</code> 以上可识别，<code>link</code> 无兼容性问题</li></ul></li><li><p>css 伪元素</p><ul><li>active 必须位于 hover 之后</li><li>顺序：</li></ul></li><li><p><code>inline-block</code> 可以设置高度</p></li><li><p><code>inline</code> 不可以设置高度</p></li><li><p><code>zoom</code> 与 <code>transform:scale</code> 区别</p><ul><li><code>zoom</code> 改变实际占用空间，非标准，但普遍使用 <ul><li>触发 <code>重排reflow</code>、<code>重绘repaint</code></li></ul></li><li><code>transform:scale</code> 不改变实际占用空间，标准 <ul><li>触发 <code>合成层 composite layer</code></li></ul></li></ul></li><li><p>CSS IFC inline formatting context</p><blockquote><p>内联格式上下文</p></blockquote></li><li><p>CSS BFC block formatting context</p><blockquote><p>块级格式上下文。里面子元素不会影响到外面的元素</p></blockquote></li></ul><h3 id="bfc-问题" tabindex="-1">BFC 问题 <a class="header-anchor" href="#bfc-问题" aria-label="Permalink to &quot;BFC 问题&quot;">​</a></h3><ul><li>BFC(Block formatting context)，块级格式化上下文 <ul><li>满足以下都可以触发 BFC <ul><li>body 根元素</li><li>float 元素：除以 <code>none</code> 意外的值</li><li>display：<code>inline-block</code>、<code>table-cells</code>、<code>flex</code></li><li>overflow：非 visible 的值 (<code>hidden</code>、<code>auto</code>、<code>scroll</code>)</li><li>position: <code>absolute</code></li></ul></li></ul></li><li>BFC 浮动子元素也参与计算</li><li>BFC 页面隔离独立容器，容器的子元素不会影响到外部</li></ul><h4 id="bfc-使用场景" tabindex="-1">BFC 使用场景 <a class="header-anchor" href="#bfc-使用场景" aria-label="Permalink to &quot;BFC 使用场景&quot;">​</a></h4><ol><li>清除浮动，父级包含浮动子元素，未触发 BFC，可能导致高度塌陷。</li></ol><details class="details custom-block"><summary>答案</summary><p>此时需要触发 BFC 来消除，如 <code>overflow: hidden</code></p></details><h2 id="可被继承的-css-属性" tabindex="-1">可被继承的 css 属性 <a class="header-anchor" href="#可被继承的-css-属性" aria-label="Permalink to &quot;可被继承的 css 属性&quot;">​</a></h2><h3 id="字体" tabindex="-1">字体 <a class="header-anchor" href="#字体" aria-label="Permalink to &quot;字体&quot;">​</a></h3><ul><li><code>font-family</code></li><li><code>font-size</code></li><li><code>font-style</code></li><li><code>font-weight</code></li><li><code>font-stretch</code></li><li><code>font-size-adjust</code></li></ul><h3 id="列表相关" tabindex="-1">列表相关 <a class="header-anchor" href="#列表相关" aria-label="Permalink to &quot;列表相关&quot;">​</a></h3><ul><li><code>list-style</code></li><li><code>list-style-image</code></li><li><code>list-style-position</code></li><li><code>list-style-type</code></li><li><code>list-style-color</code></li></ul><h3 id="文本继承" tabindex="-1">文本继承 <a class="header-anchor" href="#文本继承" aria-label="Permalink to &quot;文本继承&quot;">​</a></h3><ul><li><code>text-indent</code></li><li><code>text-align</code></li><li><code>lint-height</code></li><li><code>word-spacing</code></li><li><code>letter-spacing</code></li><li><code>text-transform</code></li><li><code>direction</code></li><li><code>color</code></li></ul><h3 id="元素可见性" tabindex="-1">元素可见性 <a class="header-anchor" href="#元素可见性" aria-label="Permalink to &quot;元素可见性&quot;">​</a></h3><ul><li><code>visibility</code></li></ul><h3 id="表格布局" tabindex="-1">表格布局 <a class="header-anchor" href="#表格布局" aria-label="Permalink to &quot;表格布局&quot;">​</a></h3><ul><li><code>caption-side</code></li><li><code>border-collapse</code></li><li><code>border-spacing</code></li><li><code>empty-cells</code></li><li><code>table-layout</code></li></ul><h3 id="生成内容" tabindex="-1">生成内容 <a class="header-anchor" href="#生成内容" aria-label="Permalink to &quot;生成内容&quot;">​</a></h3><ul><li><code>quotes</code></li></ul><h3 id="光标属性" tabindex="-1">光标属性 <a class="header-anchor" href="#光标属性" aria-label="Permalink to &quot;光标属性&quot;">​</a></h3><ul><li><code>cursor</code></li></ul><h3 id="页面样式" tabindex="-1">页面样式 <a class="header-anchor" href="#页面样式" aria-label="Permalink to &quot;页面样式&quot;">​</a></h3><ul><li><code>page</code></li><li><code>page-break-inside</code></li><li><code>windows</code></li><li><code>orphans</code></li></ul><h3 id="声音样式" tabindex="-1">声音样式 <a class="header-anchor" href="#声音样式" aria-label="Permalink to &quot;声音样式&quot;">​</a></h3><ul><li><code>speak</code></li><li><code>speak-punctuation</code></li><li><code>speak-numeral</code></li><li><code>speak-header</code></li><li><code>volume</code></li><li><code>voice-family</code></li><li><code>pitch</code></li><li><code>pitch-range</code></li><li><code>stress</code></li><li><code>richness</code></li><li><code>azimuth</code></li><li><code>elevation</code></li></ul><h2 id="不可被继承的-css-属性" tabindex="-1">不可被继承的 css 属性 <a class="header-anchor" href="#不可被继承的-css-属性" aria-label="Permalink to &quot;不可被继承的 css 属性&quot;">​</a></h2><ul><li><code>display</code></li><li><code>margin</code></li><li><code>border</code></li><li><code>padding</code></li><li><code>background</code></li><li><code>height</code></li><li><code>min-height</code></li><li><code>max-height</code></li><li><code>width</code></li><li><code>min-height</code></li><li><code>max-height</code></li><li><code>overflow</code></li><li><code>position</code></li><li><code>left</code></li><li><code>right</code></li><li><code>top</code></li><li><code>bottom</code></li><li><code>z-index</code></li><li><code>float</code></li><li><code>clear</code></li><li><code>table-layout</code></li><li><code>vertical-align</code></li><li><code>page-break-after</code></li><li><code>page-break-before</code></li><li><code>unicode-bidi</code></li></ul><h2 id="css-选择符优先级" tabindex="-1">css 选择符优先级 <a class="header-anchor" href="#css-选择符优先级" aria-label="Permalink to &quot;css 选择符优先级&quot;">​</a></h2><table tabindex="0"><thead><tr><th>css 选择符</th><th>优先级</th></tr></thead><tbody><tr><td><code>!important</code></td><td><code>infinite</code></td></tr><tr><td><code>inline</code></td><td><code>1000</code></td></tr><tr><td><code>id</code></td><td><code>100</code></td></tr><tr><td><code>class</code>、<code>attr</code>、<code>伪类</code></td><td><code>10</code></td></tr><tr><td><code>element</code></td><td><code>1</code></td></tr><tr><td><code>*</code></td><td><code>0</code></td></tr></tbody></table><h2 id="伪类元素" tabindex="-1">伪类元素 <a class="header-anchor" href="#伪类元素" aria-label="Permalink to &quot;伪类元素&quot;">​</a></h2><ul><li>first-of-type</li><li>nth-child(2)</li><li>disabled</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>本页内容为网络收集整理所得</p></div>',36)]))}const b=o(c,[["render",a]]);export{p as __pageData,b as default};
